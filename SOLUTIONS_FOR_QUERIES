Before going for solutions of the querries it is seen that it needs data cleaning and and also need to change datatypes for some columns.


-- Copying table to new table ( WE ARE USING NEW TABLE FROM EXISTING TABLE SO THAT OUR ORIGINAL DATA WILL RETAIN AS SAME ACTUAL DATA )

drop table if exists customer_orders_new;
create table customer_orders_new as
(select order_id, customer_id, pizza_id, exclusions, extras, order_time 
from customer_orders);


-- DATA CLEANING


update customer_orders_new
set 
exclusions = case exclusions when 'null' then null else exclusions end,
extras = case extras when 'null' then null else extras end;


--DATA COPYING & CLEANING

create table runner_orders_new as 
(select order_id, runner_id, pickup_time,
case
 when distance like '%km' then trim('km' from distance)
 else distance 
end as distance,
case
 when duration like '%minutes' then trim('minutes' from duration)
 when duration like '%mins' then trim('mins' from duration)
 when duration like '%minute' then trim('minute' from duration)
 else duration
end as duration, cancellation 
from runner_orders);


--DATA CLEANING

update runner_orders_new
set 
pickup_time = case pickup_time when 'null' then null else pickup_time end,
distance = case distance when 'null' then null else distance end,
duration = case duration when 'null' then null else duration end,
cancellation = case cancellation when 'null' then null else cancellation end;


-- UPDATE DATATYPES FOR RUNNER TABLE
 
alter table runner_orders1
 modify column pickup_time datetime null,
 modify column distance decimal(5,1) null,
 modify column duration int null;



A. Pizza Metrics

1) How many pizzas were ordered?
SELECT COUNT(*) AS pizza_order_count
FROM customer_orders_new;

2) How many unique customer orders were made?
SELECT 
COUNT(DISTINCT order_id) AS unique_order_count
FROM customer_orders_new;

3)How many successful orders were delivered by each runner?
SELECT 
runner_id, 
COUNT(order_id) AS successful_orders
FROM runner_orders_new
WHERE distance != 0
GROUP BY runner_id;

4) How many of each type of pizza was delivered?
SELECT 
  p.pizza_name, 
  COUNT(c.pizza_id) AS delivered_pizza_count
FROM customer_orders_new AS c
JOIN runner_orders_new AS r
  ON c.order_id = r.order_id
JOIN pizza_names AS p
  ON c.pizza_id = p.pizza_id
WHERE r.distance != 0
GROUP BY p.pizza_name;

5) How many Vegetarian and Meatlovers were ordered by each customer?
SELECT 
  c.customer_id, 
  p.pizza_name, 
  COUNT(p.pizza_name) AS order_count
FROM customer_orders_new AS c
JOIN pizza_names AS p
  ON c.pizza_id= p.pizza_id
GROUP BY c.customer_id, p.pizza_name
ORDER BY c.customer_id;

6) What was the maximum number of pizzas delivered in a single order?

WITH pizza_count_cte AS
(
  SELECT 
    c.order_id, 
    COUNT(c.pizza_id) AS pizza_per_order
  FROM customer_orders_new AS c
  JOIN runner_orders_new AS r
    ON c.order_id = r.order_id
  WHERE r.distance != 0
  GROUP BY c.order_id
)

SELECT 
  MAX(pizza_per_order) AS pizza_count
FROM pizza_count_cte;

7) For each customer, how many delivered pizzas had at least 1 change and how many had no changes?

SELECT 
  c.customer_id,
  SUM(
    CASE WHEN c.exclusions <> ' ' OR c.extras <> ' ' THEN 1
    ELSE 0
    END) AS at_least_1_change,
  SUM(
    CASE WHEN c.exclusions = ' ' AND c.extras = ' ' THEN 1 
    ELSE 0
    END) AS no_change
FROM customer_orders_new AS c
JOIN runner_orders_new AS r
  ON c.order_id = r.order_id
WHERE r.distance != 0
GROUP BY c.customer_id
ORDER BY c.customer_id;

8) How many pizzas were delivered that had both exclusions and extras?
SELECT  
  SUM(
    CASE WHEN exclusions IS NOT NULL AND extras IS NOT NULL THEN 1
    ELSE 0
    END) AS pizza_count_w_exclusions_extras
FROM customer_orders_new AS c
JOIN runner_orders_new AS r
  ON c.order_id = r.order_id
WHERE r.distance >= 1 
  AND exclusions <> ' ' 
  AND extras <> ' ';

9) What was the total volume of pizzas ordered for each hour of the day?

SELECT 
  DATEPART(HOUR, [order_time]) AS hour_of_day, 
  COUNT(order_id) AS pizza_count
FROM customer_orders_new
GROUP BY DATEPART(HOUR, [order_time]);

10) What was the volume of orders for each day of the week?
SELECT 
  FORMAT(DATEADD(DAY, 2, order_time),'dddd') AS day_of_week, -- add 2 to adjust 1st day of the week as Monday
  COUNT(order_id) AS total_pizzas_ordered
FROM customer_orders_new
GROUP BY FORMAT(DATEADD(DAY, 2, order_time),'dddd');

B. Runner and Customer Experience

1) How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)
SELECT 
  DATEPART(WEEK, registration_date) AS registration_week,
  COUNT(runner_id) AS runner_signup
FROM runners
GROUP BY DATEPART(WEEK, registration_date);

2) What was the average time in minutes it took for each runner to arrive at the Pizza Runner outlet to pickup the order?
WITH time_taken_cte AS
(
  SELECT 
    c.order_id, 
    c.order_time, 
    r.pickup_time, 
    DATEDIFF(MINUTE, c.order_time, r.pickup_time) AS pickup_minutes
  FROM customer_orders_new AS c
  JOIN runner_orders_new AS r
    ON c.order_id = r.order_id
  WHERE r.distance != 0
  GROUP BY c.order_id, c.order_time, r.pickup_time
)

SELECT 
  AVG(pickup_minutes) AS avg_pickup_minutes
FROM time_taken_cte
WHERE pickup_minutes > 1;

3) Is there any relationship between the number of pizzas and how long the order takes to prepare?

WITH prep_time_cte AS
(
  SELECT 
    c.order_id, 
    COUNT(c.order_id) AS pizza_order, 
    c.order_time, 
    r.pickup_time, 
    DATEDIFF(MINUTE, c.order_time, r.pickup_time) AS prep_time_minutes
  FROM customer_orders_new AS c
  JOIN runner_orders_new AS r
    ON c.order_id = r.order_id
  WHERE r.distance != 0
  GROUP BY c.order_id, c.order_time, r.pickup_time
)

SELECT 
  pizza_order, 
  AVG(prep_time_minutes) AS avg_prep_time_minutes
FROM prep_time_cte
WHERE prep_time_minutes > 1
GROUP BY pizza_order;

4) What was the average distance travelled for each customer?
SELECT 
  c.customer_id, 
  AVG(r.distance) AS avg_distance
FROM customer_orders_new AS c
JOIN runner_orders_new AS r
  ON c.order_id = r.order_id
WHERE r.duration != 0
GROUP BY c.customer_id;

5) What was the difference between the longest and shortest delivery times for all orders?
SELECT 
  order_id, duration
FROM runner_orders_new
WHERE duration not like ' ';

6) What was the average speed for each runner for each delivery and do you notice any trend for these values?
SELECT 
  r.runner_id, 
  c.customer_id, 
  c.order_id, 
  COUNT(c.order_id) AS pizza_count, 
  r.distance, (r.duration / 60) AS duration_hr , 
  ROUND((r.distance/r.duration * 60), 2) AS avg_speed
FROM runner_orders_new AS r
JOIN customer_orders_new AS c
  ON r.order_id = c.order_id
WHERE distance != 0
GROUP BY r.runner_id, c.customer_id, c.order_id, r.distance, r.duration
ORDER BY c.order_id;

7) What is the successful delivery percentage for each runner?

SELECT 
  runner_id, 
  ROUND(100 * SUM(
    CASE WHEN distance = 0 THEN 0
    ELSE 1 END) / COUNT(*), 0) AS success_perc
FROM #runner_orders
GROUP BY runner_id;
